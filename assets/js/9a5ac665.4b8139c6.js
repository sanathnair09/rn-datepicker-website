(self.webpackChunkreact_native_datepicker_website=self.webpackChunkreact_native_datepicker_website||[]).push([[4],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},l=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),l=s(t),u=r,k=l["".concat(d,".").concat(u)]||l[u]||c[u]||i;return t?a.createElement(k,o(o({ref:n},m),{},{components:t})):a.createElement(k,o({ref:n},m))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=l;var p={};for(var d in n)hasOwnProperty.call(n,d)&&(p[d]=n[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}l.displayName="MDXCreateElement"},9290:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return c}});var a=t(2122),r=t(9756),i=(t(7294),t(3905)),o=["components"],p={sidebar_position:3,title:"Migrating from the older Component",sidebar_label:"Migrating from the older Component"},d={unversionedId:"Usage/migration",id:"Usage/migration",isDocsHomePage:!1,title:"Migrating from the older Component",description:"RNDateTimePicker is the new common name used to represent the old versions of iOS and Android.",source:"@site/docs/Usage/migration.md",sourceDirName:"Usage",slug:"/Usage/migration",permalink:"/rn-datepicker-website/docs/Usage/migration",editUrl:"https://github.com/react-native-datetimepicker/datetimepicker/docs/Usage/migration.md",version:"current",sidebar_label:"Migrating from the older Component",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Migrating from the older Component",sidebar_label:"Migrating from the older Component"},sidebar:"tutorialSidebar",previous:{title:"Props",permalink:"/rn-datepicker-website/docs/Usage/props"},next:{title:"Donating",permalink:"/rn-datepicker-website/docs/donating"}},s=[{value:"DatePickerIOS",id:"datepickerios",children:[]},{value:"DatePickerAndroid",id:"datepickerandroid",children:[]},{value:"TimePickerAndroid",id:"timepickerandroid",children:[]}],m={toc:s};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"RNDateTimePicker")," is the new common name used to represent the old versions of iOS and Android."),(0,i.kt)("p",null,"On Android, open picker modals will update the selected date and/or time if the prop ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," changes. For example, if a HOC holding state, updates the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," prop. Previously the component used to close the modal and render a new one on consecutive calls."),(0,i.kt)("h3",{id:"datepickerios"},"DatePickerIOS"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"initialDate")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Before\n<DatePickerIOS initialValue={new Date()} />\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Now\n<RNDateTimePicker value={new Date()} />\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"date")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Before\n<DatePickerIOS date={new Date()} />\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Now\n<RNDateTimePicker value={new Date()} />\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," now returns also the date."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Before\nonChange = (event) => {};\n<DatePickerIOS onChange={this.onChange} />;\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Now\nonChange = (event, date) => {};\n<RNDateTimePicker onChange={this.onChange} />;\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"onDateChange")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Before\nsetDate = (date) => {};\n<DatePickerIOS onDateChange={this.setDate} />;\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Now\nsetDate = (event, date) => {};\n<RNDateTimePicker onChange={this.setDate} />;\n")))),(0,i.kt)("h3",{id:"datepickerandroid"},"DatePickerAndroid"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"date")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, year, month, day } = await DatePickerAndroid.open({\n    date: new Date(),\n  });\n} catch ({ code, message }) {\n  console.warn("Cannot open date picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\n<RNDateTimePicker mode="date" value={new Date()} />\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"minDate")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxDate")," are deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"minimumDate")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"maximumDate")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, year, month, day } = await DatePickerAndroid.open({\n    minDate: new Date(),\n    maxDate: new Date(),\n  });\n} catch ({ code, message }) {\n  console.warn("Cannot open date picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\n<RNDateTimePicker\n  mode="date"\n  minimumDate={new Date()}\n  maximumDate={new Date()}\n/>\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"dateSetAction")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, year, month, day } = await DatePickerAndroid.open();\n  if (action === DatePickerAndroid.dateSetAction) {\n    // Selected year, month (0-11), day\n  }\n} catch ({ code, message }) {\n  console.warn("Cannot open date picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\nsetDate = (event, date) => {\n  if (date !== undefined) {\n    // timeSetAction\n  }\n};\n<RNDateTimePicker mode="date" onChange={this.setDate} />;\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"dismissedAction")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, year, month, day } = await DatePickerAndroid.open();\n  if (action === DatePickerAndroid.dismissedAction) {\n    // Dismissed\n  }\n} catch ({ code, message }) {\n  console.warn("Cannot open date picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\nsetDate = (event, date) => {\n  if (date === undefined) {\n    // dismissedAction\n  }\n};\n<RNDateTimePicker mode="date" onChange={this.setDate} />;\n')))),(0,i.kt)("h3",{id:"timepickerandroid"},"TimePickerAndroid"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"hour")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"minute")," are deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Before\ntry {\n  const { action, hour, minute } = await TimePickerAndroid.open({\n    hour: 14,\n    minute: 0,\n    is24Hour: false, // Will display '2 PM'\n  });\n  if (action !== TimePickerAndroid.dismissedAction) {\n    // Selected hour (0-23), minute (0-59)\n  }\n} catch ({ code, message }) {\n  console.warn(\"Cannot open time picker\", message);\n}\n")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\n// It will use the hour and minute defined in date\n<RNDateTimePicker mode="time" value={new Date()} />\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"timeSetAction")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, hour, minute } = await TimePickerAndroid.open();\n  if (action === TimePickerAndroid.timeSetAction) {\n    // Selected hour (0-23), minute (0-59)\n  }\n} catch ({ code, message }) {\n  console.warn("Cannot open time picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\nsetTime = (event, date) => {\n  if (date !== undefined) {\n    // Use the hour and minute from the date object\n  }\n};\n<RNDateTimePicker mode="time" onChange={this.setTime} />;\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"dismissedAction")," is deprecated, use ",(0,i.kt)("inlineCode",{parentName:"p"},"onChange")," instead."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Before\ntry {\n  const { action, hour, minute } = await TimePickerAndroid.open();\n  if (action === TimePickerAndroid.dismissedAction) {\n    // Dismissed\n  }\n} catch ({ code, message }) {\n  console.warn("Cannot open time picker", message);\n}\n')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// Now\nsetTime = (event, date) => {\n  if (date === undefined) {\n    // dismissedAction\n  }\n};\n<RNDateTimePicker mode="time" onChange={this.setTime} />;\n')))))}c.isMDXComponent=!0}}]);