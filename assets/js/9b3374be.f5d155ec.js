(self.webpackChunkreact_native_datepicker_website=self.webpackChunkreact_native_datepicker_website||[]).push([[713],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3592:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:1,title:"Basic Usage With State",sidebar_label:"Basic Usage"},s={unversionedId:"Usage/example",id:"Usage/example",isDocsHomePage:!1,title:"Basic Usage With State",description:"Import",source:"@site/docs/Usage/example.md",sourceDirName:"Usage",slug:"/Usage/example",permalink:"/rn-datepicker-website/docs/Usage/example",editUrl:"https://github.com/react-native-datetimepicker/datetimepicker/docs/Usage/example.md",version:"current",sidebar_label:"Basic Usage",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Basic Usage With State",sidebar_label:"Basic Usage"},sidebar:"tutorialSidebar",previous:{title:"Manual Installation",permalink:"/rn-datepicker-website/docs/Getting-Started/manual-installation"},next:{title:"Props",permalink:"/rn-datepicker-website/docs/Usage/props"}},p=[{value:"Import",id:"import",children:[]},{value:"Implementation",id:"implementation",children:[]}],l={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import DateTimePicker from '@react-native-community/datetimepicker';\n")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import React, {useState} from 'react';\nimport {View, Button, Platform} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nexport const App = () => {\n  const [date, setDate] = useState(new Date(1598051730000));\n  const [mode, setMode] = useState('date');\n  const [show, setShow] = useState(false);\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  const showMode = (currentMode) => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode('date');\n  };\n\n  const showTimepicker = () => {\n    showMode('time');\n  };\n\n  return (\n    <View>\n      <View>\n        <Button onPress={showDatepicker} title=\"Show date picker!\" />\n      </View>\n      <View>\n        <Button onPress={showTimepicker} title=\"Show time picker!\" />\n      </View>\n      {show && (\n        <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={date}\n          mode={mode}\n          is24Hour={true}\n          display=\"default\"\n          onChange={onChange}\n        />\n      )}\n    </View>\n  );\n};\n\n")))}u.isMDXComponent=!0}}]);